name: Playwright Tests
on:
  push:
    branches: [testing-ged-automation]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Install Allure CLI
        run: npm install --save-dev allure-commandline allure-playwright
      - name: Run Playwright tests
        run: npx playwright test
      - name: Generate Allure Report
        run: |
          allure generate allure-results --clean -o allure-report
          ls -al allure-report  # Вывод содержимого отчета для проверки
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: allure-report
          path: allure-report/
          retention-days: 30

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: always() # Запускать даже если тесты упали
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Allure Report
        uses: actions/download-artifact@v4
        with:
          name: allure-report
          path: allure-report

      - name: Verify Allure Report
        run: |
          ls -al allure-report  # Проверка содержимого после загрузки артефакта

      - name: Deploy Allure Report to GitHub Pages
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          git fetch origin gh-pages || echo "gh-pages does not exist"
          git checkout gh-pages || git checkout --orphan gh-pages
          git rm -rf . # Очищаем текущий репозиторий
          mv allure-report/* . # Перемещаем отчет
          git add . # Добавляем файлы
          git commit -m "Deploy Allure test report"
          git push -f https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} gh-pages
